# 데이터 유지 #
  프로그램에서 가동중에 발생한 데이터들은 유지가 필요하다.
  가입을 통해 확보한 회원정보 같은 경우, 가동중에는 applicatin 영역을 이용해서 
  저장해나가겠지만 종료되면 사라지게 된다. 
  예전에는 이 문제를 파일을 통해서 해결해보았지만, DB라는걸 이용해서 처리해보자.

# DataBase #
  DB(DataBase) ?
    데이터를 효율적으로 저장/관리 하게 만들어진 프로그램이다.
    (네트워크기반으로 작동하는 Client-Server방식임)
    개발자가 직접 데이터를 File로 관리하게 되면 고려사항들이 많다. 
    예를 들어, 제약조건을 걸어서 필요한 데이터들만 저장하려고 하더라고,
    코드로 다 해결을 해야되는데, DB를 쓰게 되면 룰 설정을 통해서 필요한 데이터들만
    저장되게 한다든지 등의 지원을 받을수 있다. 그러면서 파일을 이용해서 처리하는것보다는
    작업량이 많이 줄어들게 된다.(배열 vs 컬렉션 정도의 차이라고 느끼면 됨)

# DataBase의 분류 #
   - RDB (관계형 DB)
    : 보통 일반적으로 떠올리게 되는 DB가 거의 RDB 계열이다.
      Oracle(※), mySQL, mariaDB, SQLServer, Postgre , zeus 등 여러 종류가 존재한다.
      RDB의 특징은, 데이터관리를 하게 될때 table이라는걸 이용해서 표형태로 저장을 하게 된다.
      데이터를 저장하기 위해서 어떤 데이터들을 저장할껀지 미리 설계를 해두고 사용해야 된다. 
      (※정해진 설계에 따른 데이터들만 저장이 가능함/데이터 CRUD연산이 복잡하다.)
      RDB는 종류는 여러가지지만, 데이터 C/R/U/D 작업시 사용되는 명령어들이 다 동일하다. 
      데이터베이스 종류마다 처리하는 문법이 다르면, 사용할때 혼선이 일어나기 때문에 표준 질의문(SQL)에 따라서 
      작업이 일어나게 설계되있다. 
 
   -  NOSQL DB (NoSQL형 DB)
    : Not Only SQL 의 약자로, 어떤 개발자가 RDB의 무거운 연산작업을 개선해서 자기 혼자 사용할 용도로 만든 DB를 시초로
     꽤 여러종류의 DB가 존재한다. 이형태의 공통특징은 명령문은 DB마다 다 다름. 조건 설정 같은게 필요없고,
     최대한 속도에만 초점을 만들어진 DB이다. MongoDB(※), CouchDB, HBase 등등이 이에 속한다. 
     
   ※ DB 하면 보통 SQL형DB를 언급하기 때문에, 사용은 RDB 부터 해볼꺼고, NOSQL형 DB는 RDB 익숙해지면 그때 학습 시작


# AWS #
 《공유폴더 dev → storage → OracleXE112_Win64.zip / sqldeveloper-18.1.0.095.1630-no-jre.zip 복사해가세요.》 
  - 데이터베이스를 가동한다는건 컴퓨터의 꽤 많은 자원을 소모하게 되있다. 
  사용자의 접속을 기다리면서 대기를 하고 있어야되기 때문에 24시간 가동도 되고 있어야 한다.
  이 DB 프로그램을 개별PC나 노트북에 설치하게 되면 사용중인 PC의 성능이 저하될수 있다.
   그래서 DB를 AWS에서 제공하는 클라우드 컴퓨팅서비스를 이용해서 가상머신에서 작동을 시키려고 한다.
  AWS에 가입해서 로그인을 진행하자.
  (※개인계정으로, 프리티어로 가입할것..! 가입시 해외결제 가능한 카드가 필요 $1 결제)
    접속지역부터 변경하시고 (아시아태평양-서울) → EC2 Container 생성(가상머신 시작) →  
    Microsoft Windows Server 2016 Base → 검토 및 시작 → 시작 → (키페어 선택하라고 뜸:보안키)
    → 새 키 페어 생성 → 파일이름은 알아서 설정 → 다운 → 상태창에서 runnig으로 바뀌면 가동이 되기 시작한거임
    → 이 가상머신에 oracle이나 tomcat 같은 서버프로그램을 설치하면 됨.
    → 원격접속이 필요함. → 연결 클릭 해서 원격데탑 파일 다운로드 를 받자 → 클릭하고 접속하면 암호 물어봄
    → 암호해독해서 연결 완료 → 오라클 설치 파일을 업로드(OracleXE112_Win64.zip) 
    / (혹시 WAS 돌릴려면, JDK + Tomcat도 설치해두시면 됨니다) 
    → 압축해제 후 설치 (setup.exe 실행) → system 계정의 암호를 설정해야 함 (oracle) 
    → 사용 port (1521/2030/8080) 확인 (※tomcat 과 동시에 가동하려면 둘중 하나의 port 변경이 필요) → 완료


 ＊ SQL Developer 
   - 외부에서 이 DB Server에 접속해서 작업을 하려면 클라이언트 프로그램이 필요함. 오라클용 클라이언트측 프로그램도
   꽤 다양한 툴들이 존재한다. SQL Developer 부터해서 Toad, Orange, SqlGate 등 중에 선택해서 사용하면 된다.
   무료 프로그램인 SQL Developer (Oracle 社)를 이용할꺼다. 이건 개발환경에 설치하시면 된다.(압축해제)
   설치가 완료되면 실행하자.(최초 실행시 JDK 경로 잡아줘야 함.)   

   STEP1) 사용자 계정 생성
    사용자 계정생성을 위해서 master 계정으로 로그인을 진행하자
    [새 접속] 선택후 → 
    사용자이름을 system 으로 비번은 설치시 사용했던 비번, 호스트이름은 AWS에서 할당해준 IP를 설정해서
       (접속이름은 알아보기 쉽게 부여하세요)  → 
    [접속] ! (EC2 설정을 안잡으면 연결거부가 뜬다.)
   STEP2) EC2 설정   
     2-1# AWS 웹 페이지에서 머신의 보안그룹을 변경.. 인바운드  유형을 RDP 에서 모든 트래픽으로 변경 
     2-2# 컨테이너 들어가서 윈도우 자체의 포트 개방 혹은 방화벽 해제 > 

   STEP3) STEP1을 재시도시 접속이 됨.
    접속이 됬다면, 명령어를 작성할수 있는 창이 열린다.
    이 툴에다가 DB 서버로 전송해야될 명령어를 작성해서  ;찍고 ctrl+enter 를 치면 그라인의 명령어가 서버로 전달되고
    결과를 확인할수 있다.
    show user;
    로그인한 계정이 system인걸 확인했으면, 이 계정은 설정정보가 잡혀있는 계정이니까 여기서 작업하지 마시고,
    실제로 연동해서 사용할 계정을 만들어서 작업을 하자.

    create user 계정명 identified by 비번;
    ex) create user dev identified by oracle;
    계정 생성 이후, 사용자 계정으로 접속을 해보면 안되는걸 볼수 있다. (권한이 없어서)
    권한 부여가 필요하다.
    grant 권한(들) to 계정명
    exe) grant connect,resource to dev;

    생성시킨 계정으로 접속해서 show user; 로 상태확인해보자. 
    (※ system 접속 시켜둔 연결 종료)


  















        
     




 

 















 


















  


